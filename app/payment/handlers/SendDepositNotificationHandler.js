const BaseHandler = require("@/core/BaseHandler")
const transactionModel = require("@/models/Transactions")
const UserModel = require("@/models/FrontUsers")
const nodemailer = require("nodemailer")

module.exports = class SendDepositNotificationHandler extends BaseHandler {
  async handle(context) {
    const { errors, insertId, userId } = context

    if (errors.length > 0) return context

    try {
      const userModel = new UserModel()
      const user = await userModel.getUserById(userId)
      const transaction = await transactionModel.getPostById(insertId)

      if (!user || !transaction) {
        errors.push(
          "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
        )
        return context
      }

      const transporter = nodemailer.createTransport({
        service: "gmail",
        auth: { user: _EMAIL, pass: _GMAIL_KEY }
      })

      let mailOptions = null
      if (transaction.status === "confirmed") {
        mailOptions = {
          from: _EMAIL,
          to: user.email,
          subject: "–í–∞—à –¥–µ–ø–æ–∑–∏—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω üí∏",
          html: `
            <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}!</h2>
            <p>–í–∞—à –¥–µ–ø–æ–∑–∏—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ —Å—á—ë—Ç.</p>
            <p><strong>–°—É–º–º–∞:</strong> ${transaction.amount} USD</p>
            <p>–î–∞—Ç–∞: ${new Date(transaction.confirmed_at).toLocaleString()}</p>
            <p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å Winora üíö</p>
            <a href="${_FRONT_DOMAIN}/profile/transactions">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º</a>
          `
        }
      } else if (
        transaction.status === "canceled" ||
        transaction.status === "failed"
      ) {
        mailOptions = {
          from: _EMAIL,
          to: user.email,
          subject: "–í–∞—à –¥–µ–ø–æ–∑–∏—Ç –Ω–µ –±—ã–ª –∑–∞—á–∏—Å–ª–µ–Ω ‚ùóÔ∏è",
          html: `
            <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}!</h2>
            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å—É–º–º—É <strong>${transaction.amount} USD</strong> –Ω–µ –±—ã–ª –∑–∞—á–∏—Å–ª–µ–Ω.</p>
            <p>–ü—Ä–∏—á–∏–Ω–∞: ${transaction.internal_comment || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}</p>
            <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>
            <hr/>
            <a href="${_FRONT_DOMAIN}/support">–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π</a>
          `
        }
      } else {
        mailOptions = {
          from: _EMAIL,
          to: user.email,
          subject: "–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –æ–±–Ω–æ–≤–ª—ë–Ω ‚è≥",
          html: `
            <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}!</h2>
            <p>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—ë–Ω: <strong>${transaction.status}</strong></p>
            <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ <a href="${_FRONT_DOMAIN}/profile/transactions">—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</a>.</p>
          `
        }
      }
      if (mailOptions) {
        await transporter.sendMail(mailOptions)
      }
    } catch (err) {
      errors.push("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
      return context
    }

    return super.handle(context)
  }
}
